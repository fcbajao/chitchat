@import 'ress/ress.css';

$color: (
  dark: #1B1B1C,
  medium: #353535,
  light: #9EA1A2,
  lightest: #F9F9F9,
  white: #FFFFFF,
  alert: #C0392B,
  action: #353535
);

$space: (
  xlarge: 50px,
  large: 30px,
  medium: 20px,
  small: 10px
);

$font-size: (
  xlarge: 28px,
  large: 24px,
  medium: 18px,
);

$breakpoints: (
  small: (max-width: 767px)
);

// Thanks: https://www.sitepoint.com/managing-responsive-breakpoints-sass/
@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

%action-btn {
  background-color: map-get($color, action);
  color: map-get($color, white);
}

%text-input {
  width: 100%;

  &::placeholder {
    color: map-get($color, light);
  }
}

html, body, #main, .app {
  height: 100%;
  overflow: hidden;
}

body {
  background-color: map-get($color, lightest);
  color: map-get($color, medium);
  font-family: 'Courier New', Courier, monospace;
  font-size: map-get($font-size, medium);
}

input, button {
  outline: none;
}

fieldset {
  border: 0;
}

.login {
  background-color: map-get($color, white);
  border: 1px solid map-get($color, dark);
  margin: map-get($space, xlarge) auto 0;
  padding: map-get($space, large);
  width: 600px;

  &__heading {
    color: map-get($color, dark);
    font-size: map-get($font-size, xlarge);
    margin-bottom: map-get($space, large);
    text-align: center;
  }

  &__intro {
    color: map-get($color, dark);
    font-size: map-get($font-size, large);
    margin-bottom: map-get($space, xlarge);
    text-align: center;
  }

  &__form {
    padding: 0 map-get($space, medium);
  }

  @include respond-to(small) {
    border: 0;
    height: 100%;
    margin: 0;
    width: auto;

    &__heading {
      font-size: map-get($font-size, large);
    }

    &__intro {
      font-size: map-get($font-size, medium);
    }
  }
}

.login-form {
  &__error {
    color: map-get($color, alert);
    font-size: map-get($font-size, large);
    margin-bottom: map-get($space, medium);
    text-align: center;
  }

  &__fieldset {
    margin-bottom: map-get($space, medium);
  }

  &__label {
    display: none;
  }

  &__field {
    margin-bottom: map-get($space, medium);

    &:last-child {
      margin-bottom: 0;
    }
  }

  &__text-input {
    @extend %text-input;
    border: 1px solid map-get($color, medium);
    font-size: map-get($font-size, large);
    padding: map-get($space, small) map-get($space, medium);
  }

  &__submit-btn {
    @extend %action-btn;
    display: block;
    font-size: map-get($font-size, large);
    margin: 0 auto;
    padding: map-get($space, small) map-get($space, medium);
  }

  @include respond-to(small) {
    &__error, &__text-input, &__submit-btn {
      font-size: map-get($font-size, medium);
    }
  }
}

.room {
  display: flex;
  flex-direction: column;
  height: 100%;

  &__header {
    background-color: map-get($color, dark);
    color: map-get($color, white);
    padding: map-get($space, small);
  }

  &__messages-container {
    display: flex;
    flex-direction: column;
    flex: 1;
  }
}

.messages {
  display: flex;
  flex: 1;
  flex-direction: column-reverse;
  height: 100%;
  max-height: 100%;
  overflow: auto;
  padding: map-get($space, small);

  &__message {
    margin-top: map-get($space, small);

    &:last-child {
      margin-top: 0;
    }
  }
}

.message {
  &__username {
    font-weight: bold;
  }
}

.message-form {
  border-top: 1px solid map-get($color, medium);
  display: flex;

  &__input-container {
    flex: 1;
  }

  &__input {
    @extend %text-input;
    padding: map-get($space, small);
  }

  &__send-btn {
    @extend %action-btn;
    padding: map-get($space, small);
  }
}
